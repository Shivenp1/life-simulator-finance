// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  accounts Account[]
  sessions Session[]
  financialPlans FinancialPlan[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model FinancialPlan {
  id                        String   @id @default(cuid())
  userId                    String
  name                      String
  description               String?
  gameMode                  String   @default("serious") // "game" or "serious"
  
  // Initial parameters
  startingSalary            Float
  salaryGrowthPercent       Float
  age                       Int
  
  // Current state
  currentYear               Int      @default(1)
  currentAge                Int
  currentSalary             Float
  totalSavings              Float    @default(0)
  
  // Assets
  housePrice                Float    @default(0)
  hasHouse                  Boolean  @default(false)
  carPrice                  Float    @default(0)
  hasCar                    Boolean  @default(false)
  hasRental                 Boolean  @default(false)
  selectedRental            String?
  monthlyRent               Float    @default(0)
  
  // Investments
  monthlySP500Investment    Float    @default(0)
  totalSP500Value           Float    @default(0)
  selectedInvestmentStrategy String  @default("moderate")
  
  // Game mode specific
  achievements              String? // JSON array of achievements
  
  // Timestamps
  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt
  
  user                      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  simulationHistory         SimulationHistory[]
}

model SimulationHistory {
  id                String   @id @default(cuid())
  financialPlanId   String
  year              Int
  age               Int
  salary            Float
  totalSavings      Float
  totalSP500Value   Float
  monthlySP500Investment Float
  hasHouse          Boolean
  hasCar            Boolean
  hasRental         Boolean
  monthlyRent       Float
  investmentReturn  Float?
  investmentStrategy String?
  achievements      String? // JSON array of achievements
  createdAt         DateTime @default(now())
  
  financialPlan     FinancialPlan @relation(fields: [financialPlanId], references: [id], onDelete: Cascade)
  
  @@unique([financialPlanId, year])
}
